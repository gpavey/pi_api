{
  "name": "status",
  "description": "System automation on steroids",
  "version": "0.0.6",
  "homepage": "http://github.com/wearefractal/status",
  "repository": {
    "type": "git",
    "url": "git://github.com/wearefractal/status.git"
  },
  "author": {
    "name": "Fractal",
    "email": "contact@wearefractal.com",
    "url": "http://wearefractal.com/"
  },
  "main": "./index.js",
  "preferGlobal": true,
  "bin": {
    "status": "./bin/status"
  },
  "dependencies": {
    "coffee-script": "*",
    "loggo": "*",
    "semver": "*",
    "commander": "*",
    "async": "*",
    "argus": "*",
    "fractal": "*",
    "dbus": "*"
  },
  "optionalDependencies": {
    "dbus": "*"
  },
  "devDependencies": {
    "mocha": "*",
    "should": "*"
  },
  "scripts": {
    "test": "mocha --compilers coffee:coffee-script"
  },
  "engines": {
    "node": ">= 0.6.0"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "http://github.com/wearefractal/status/raw/master/LICENSE"
    }
  ],
  "readme": "![status](https://secure.travis-ci.org/wearefractal/status.png?branch=master)\n\n## Information\n\n<table>\n<tr>\n<td>Package</td><td>status</td>\n</tr>\n<tr>\n<td>Description</td>\n<td>System automation on steroids</td>\n</tr>\n<tr>\n<td>Node Version</td>\n<td>>= 0.6</td>\n</tr>\n</table>\n\n## Introduction\n\nShh... It's okay - everything is going to be alright. status is here to make all of your nightmares go away. \n\nstatus provides a flexible JSON interface on top of any commands/tasks/sensors/signals/hardware/etc you want to automate. status operations can be run locally (via the CLI) or remotely (via the REST server).\n\n## Usage\n\n### Command Line\n\n```javascript\n// Specify a plugin and the output you want back\n// In this example I specify the 'uptime' plugin with the 'total' operation\n$ status uptime total\n{\"total\":{\"hours\":7,\"minutes\":40,\"seconds\":6}}\n\n// You can pass arguments to operations too!\n// Arguments can be any javascript objects separated by commas\n$ status processes grep[\"skype\"]\n{\"grep\":[{\"id\":1234, \"name\":\"skype\"}]}\n\n// Chaining operations will run them asynchronously\n$ status cpu temp:usage:speed\n{\"temp\":107.6, \"usage\":10, \"speed\":2100}\n\n// Combine them all and have fun!\n$ status cpu temp[\"celsius\"]:usage[\"total\",\"mhz\"]:speed[\"ghz\"]\n{\"temp\":42, \"usage\":100, \"speed\":2.1}\n```\n\n### REST API\n\n```javascript\n// Specify a plugin and the output you want back\n// In this example I specify the 'uptime' plugin with the 'total' operation\nPOST /status/uptime \"total\"\n{\"total\":{\"hours\":7,\"minutes\":40,\"seconds\":6}}\n\n// You can pass arguments to operations too!\n// Arguments can be any javascript objects separated by commas\nPOST /status/uptime \"grep['skype']\"\n{\"grep\":[{\"id\":1234, \"name\":\"skype\"}]}\n\n// Chaining operations will run them asynchronously\nPOST /status/cpu \"temp:usage:speed\"\n{\"temp\":107.6, \"usage\":10, \"speed\":2100}\n\n// Combine them all and have fun!\nPOST /status/cpu \"temp['celsius']:usage['total','mhz']:speed['ghz']\"\n{\"temp\":42, \"usage\":100, \"speed\":2.1}\n```\n\n## Included Plugins\n\n```\ncpu@0.0.1 - CPU information\n  * temp\n  * usage\n  * speed\nspotify@0.0.1 - Spotify controls/information\n  * next\n  * previous\n  * toggle\n  * pause\n  * play\n  * stop\n  * open\n  * playing\nprocesses@0.0.1 - Process information\n  * all\n  * mine\n  * grep\n  * top\nnetwork@0.0.1 - Network information\n  * upstream\n  * downstream\nwireless@0.0.1 - Wireless network information\n  * ssid\n  * bssid\n  * signal\n  * frequency\n  * rate\n  * security\n  * mode\nhd@0.0.1 - Hard Disk information\n  * temp\n  * usage\n  * total\n  * free\n  * used\ndaemons@0.0.1 - Daemon management through rc.d\n  * list\n  * started\n  * stopped\n  * auto\n  * noAuto\n  * start\n  * stop\n  * restart\n  * status\nram@0.0.1 - RAM information\n  * usage\n  * total\n  * free\n  * used\nos@0.0.1 - System information\n  * load\n  * uptime\n  * arch\n  * platform\n  * type\n  * hostname\n  * kernel\n  * environment\n  * drives\n  * cpus\n  * network\nnode@0.0.1 - Node information\n  * version\n  * environment\n  * prefix\nspeech@0.0.1 - text to speech using festival\n  * speak\n```\n\n## Writing Plugins\n\nLet's write a plugin called \"coolkern\" that returns the kernel version\n\n```coffee-script\n{exec} = require \"child_process\"\n\ncoolkern =\n  meta:\n    name: \"coolkern\"\n    author: \"YOU\"\n    version: \"0.0.1\"\n\n  version: ->\n    exec \"uname -r\", (err, stdout) => \n      @done stdout\n```\n\nSimple enough, right? Now add it to status \n\n```coffee-script\nstatus = require 'status'\nstatus.load coolkern\n```\n\nFinished! Now you can test it out\n\n```\n$ status kernel version\n{\"version\":\"3.3.7-1-ARCH\"}\n```\n\n## LICENSE\n\n(MIT License)\n\nCopyright (c) 2012 Fractal <contact@wearefractal.com>\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/wearefractal/status/issues"
  },
  "_id": "status@0.0.6",
  "_shasum": "a0325e095b8be445104afb14b7c5a230a1ebd13b",
  "_from": "status@",
  "_resolved": "https://registry.npmjs.org/status/-/status-0.0.6.tgz"
}
